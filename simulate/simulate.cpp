#include <cstdio>
#include "../RFControl.h"

void (*interruptCallback)(void);

unsigned int sim_timings[] = {

	// test with 1 footer pulse

	// 1, 2, 3,

	// 506, 2024, 506, 2024, 506, 4301, 506, 2024, 506, 4301, 506, 2277, 506, 4301, 506, 4301, 
	// 506, 2277, 506, 4301, 506, 2024, 506, 2024, 506, 2024, 506, 2277, 506, 4301, 506, 2024,
	// 506, 2024, 506, 2277, 506, 4301, 506, 2024, 506, 2024, 506, 4301, 506, 2024, 506, 4301, 
	// 506, 4301, 506, 2277, 506, 4301, 506, 4301, 506, 2024, 506, 4301, 506, 2024, 506, 2024, 
	// 506, 4301, 506, 4554, 506, 2024, 506, 2024, 506, 2277, 506, 2277, 506, 4301, 506, 2024, 
	// 506, 2024, 506, 4554, 506, 8602,

	// 506, 2024, 506, 2024, 506, 4301, 506, 2024, 506, 4301, 506, 2277, 506, 4301, 506, 4301, 
	// 506, 2277, 506, 4301, 506, 2024, 506, 2024, 506, 2024, 506, 2277, 506, 4301, 506, 2024,
	// 506, 2024, 506, 2277, 506, 4301, 506, 2024, 506, 2024, 506, 4301, 506, 2024, 506, 4301, 
	// 506, 4301, 506, 2277, 506, 4301, 506, 4301, 506, 2024, 506, 4301, 506, 2024, 506, 2024, 
	// 506, 4301, 506, 4554, 506, 2024, 506, 2024, 506, 2277, 506, 2277, 506, 4301, 506, 2024, 
	// 506, 2024, 506, 4554, 506, 8602,

	// 506, 2024, 506, 2024, 506, 4301, 506, 2024, 506, 4301, 506, 2277, 506, 4301, 506, 4301, 
	// 506, 2277, 506, 4301, 506, 2024, 506, 2024, 506, 2024, 506, 2277, 506, 4301, 506, 2024,
	// 506, 2024, 506, 2277, 506, 4301, 506, 2024, 506, 2024, 506, 4301, 506, 2024, 506, 4301, 
	// 506, 4301, 506, 2277, 506, 4301, 506, 4301, 506, 2024, 506, 4301, 506, 2024, 506, 2024, 
	// 506, 4301, 506, 4554, 506, 2024, 506, 2024, 506, 2277, 506, 2277, 506, 4301, 506, 2024, 
	// 506, 2024, 506, 4554, 506, 8602,

	// 1, 2, 3

	//test with multiple footer pulses

	// 884, 2829, 28, 1129, 345, 4243, 157, 561, 969, 1399, 153, 6593, 599, 8500, 

	// 582, 2091, 648, 2007, 560, 3967, 706, 1973, 666, 4203, 676, 2080, 654, 4221, 737, 4145, 
	// 578, 2098, 677, 4260, 676, 1996, 604, 2096, 603, 2075, 611, 2140, 565, 2120, 799, 4079, 
	// 589, 2073, 608, 4346, 590, 2115, 520, 4334, 557, 2100, 584, 4376, 769, 1917, 635, 4256, 
	// 523, 4331, 561, 2183, 670, 4209, 544, 4352, 595, 2085, 559, 4376, 572, 2099, 602, 2099, 
	// 668, 4199, 662, 4273, 631, 2054, 654, 2022, 575, 2115, 600, 2161, 529, 4334, 707, 1972, 
	// 560, 4317, 559, 2245, 700, 8403, 

	// 582, 8517, 

	// 657, 2002, 583, 2094, 560, 4304, 615, 2076, 563, 4316, 677, 2055, 529, 4344, 600, 4282, 
	// 588, 2089, 620, 4319, 662, 2027, 670, 2026, 527, 2137, 591, 2160, 607, 2081, 579, 4303, 
	// 578, 2092, 590, 4355, 561, 2129, 575, 4284, 588, 2093, 676, 4269, 571, 2108, 544, 4323, 
	// 599, 4286, 541, 2210, 521, 4353, 550, 4322, 701, 1992, 520, 4413, 620, 2062, 605, 2086, 
	// 581, 4276, 566, 4378, 541, 2144, 561, 2125, 584, 2096, 557, 2203, 608, 4259, 584, 2101, 
	// 579, 4286, 589, 2211, 632, 8469, 

	// 576, 8537, 

	// 550, 2099, 696, 1985, 648, 4217, 553, 2132, 605, 4493, 584, 2165, 531, 4342, 543, 4320, 
	// 557, 2134, 606, 4330, 529, 2151, 545, 2138, 583, 2103, 621, 2139, 617, 2067, 637, 4238, 
	// 844, 1820, 726, 4223, 599, 2084, 596, 4286, 597, 2083, 556, 4374, 560, 2136, 574, 4302, 
	// 600, 4269, 609, 2145, 589, 4280, 629, 4239, 584, 2097, 590, 4350, 578, 2118, 538, 2137, 
	// 568, 4297, 665, 4279, 606, 2077, 770, 1912, 706, 1985, 587, 2153, 660, 4216, 559, 2133, 
	// 553, 4304, 584, 2214, 586, 8519, 

	// 607, 8500, 

	// 579, 2090, 564, 2095, 672, 4201, 574, 2108, 609, 4249, 644, 2120, 570, 4300, 640, 127, 
	// 4113, 503, 1149, 138, 888, 554, 4381, 551, 2138, 554, 2133, 677, 2001, 648, 2107, 539, 
	// 2144, 578, 4283, 565, 2130, 571, 4369, 611, 2063, 580, 4301, 557, 2131, 540, 4389, 617, 
	// 2077, 584, 4292, 533, 4334, 567, 2182, 640, 4222, 558, 4322, 604, 2079, 590, 4343, 582, 
	// 2110, 510, 2167, 623, 4240, 552, 4407, 743, 1922, 590, 2105, 604, 2061, 602, 2169, 576, 
	// 4288, 574, 2107, 588, 4287, 560, 2229, 556, 8552, 

	// 605, 8496, 

	// 565, 2111, 586, 2073, 584, 4365, 500, 2108, 569, 4310, 555, 2215, 639, 4210, 553, 4310, 
	// 581, 2111, 558, 4376, 587, 2103, 512, 2169, 622, 2059, 549, 2203, 597, 2088, 643, 4219, 
	// 568, 2128, 734, 4206, 593, 2085, 639, 4225, 557, 2140, 536, 4392, 565, 2111, 559, 4315, 
	// 551, 4336, 613, 2123, 637, 4241, 588, 4291, 569, 2106, 592, 4341, 561, 2134, 596, 2080, 
	// 575, 4299, 568, 4371, 590, 2090, 594, 2100, 585, 2102, 587, 2156, 596, 4282, 607, 2088, 
	// 559, 4293, 544, 2261, 538, 8562, 

	// 619, 8484, 

	// 571, 2299, 579, 2090, 716, 4158, 652, 2035, 566, 4290, 661, 2106, 564, 4301, 606, 4269, 
	// 667, 2030, 692, 4232, 589, 2093, 554, 2126, 560, 2137, 609, 2129, 678, 2010, 577, 4292, 
	// 587, 2100, 557, 4389, 638, 2046, 532, 4345, 545, 2124, 687, 4249, 603, 2085, 556, 4325, 
	// 539, 4334, 538, 2201, 621, 4247, 571, 4306, 543, 2133, 574, 4375, 619, 2057, 551, 2139, 
	// 531, 4330, 563, 4386, 580, 2093, 653, 2046, 604, 2065, 669, 2082, 558, 4321, 620, 2053, 
	// 544, 4324, 563, 2223, 601, 8495, 

	// 537, 56879, 567, 34691, 108, 1313, 365, 20996, 206, 1684, 305, 12412, 162, 294, 129, 5492, 
	// 223, 7747, 495, 1799, 346, 1550, 127, 4026, 287, 974, 107, 34, 138, 2876, 41, 3160, 94, 
	// 1112, 94, 793, 213, 996, 87, 5195, 180, 2689, 156, 12254, 244, 1333


// 456, 1452, 1420, 504, 464, 1476, 1444, 508, 476, 1496, 1468, 520, 480, 1516, 488, 1524, 
// 484, 1524, 1504, 524, 492, 1552, 1524, 536, 500, 1576, 1548, 548, 504, 1600, 1572, 556, 
// 516, 1624, 1596, 564, 524, 1652, 1620, 576, 528, 1680, 1644, 584, 540, 1704, 540, 1708, 
// 544, 17368,

// 456, 1452, 1420, 504, 464, 1476, 1444, 508, 476, 1496, 1468, 520, 480, 1516, 488, 1524, 
// 484, 1524, 1504, 524, 492, 1552, 1524, 536, 500, 1576, 1548, 548, 504, 1600, 1572, 556, 
// 516, 1624, 1596, 564, 524, 1652, 1620, 576, 528, 1680, 1644, 584, 540, 1704, 540, 1708, 
// 544, 17368,

// 456, 1452, 1420, 504, 464, 1476, 1444, 508, 476, 1496, 1468, 520, 480, 1516, 488, 1524, 
// 484, 1524, 1504, 524, 492, 1552, 1524, 536, 500, 1576, 1548, 548, 504, 1600, 1572, 556, 
// 516, 1624, 1596, 564, 524, 1652, 1620, 576, 528, 1680, 1644, 584, 540, 1704, 540, 1708, 
// 544, 17368,


// 528, 1988, 516, 2000, 524, 3880, 536, 3888, 520, 3904, 520, 3896, 516, 2008, 516, 3896, 
// 520, 3888, 516, 2024, 516, 2012, 512, 2004, 512, 3908, 512, 2004, 512, 2000, 512, 2012, 
// 512, 2000, 512, 2024, 512, 3896, 516, 2008, 516, 1992, 520, 2000, 516, 2012, 512, 3924, 
// 508, 3912, 508, 2028, 508, 3904, 508, 2004, 516, 3888, 516, 3908, 516, 2004, 508, 2012, 
// 512, 3924, 512, 3924, 516, 2012, 512, 3916, 508, 2000, 516, 3892, 512, 2000, 512, 2020, 
// 504, 2004, 508, 2008, 512, 7728, 508, 7724,

// 528, 1988, 516, 2000, 524, 3880, 536, 3888, 520, 3904, 520, 3896, 516, 2008, 516, 3896, 
// 520, 3888, 516, 2024, 516, 2012, 512, 2004, 512, 3908, 512, 2004, 512, 2000, 512, 2012, 
// 512, 2000, 512, 2024, 512, 3896, 516, 2008, 516, 1992, 520, 2000, 516, 2012, 512, 3924, 
// 508, 3912, 508, 2028, 508, 3904, 508, 2004, 516, 3888, 516, 3908, 516, 2004, 508, 2012, 
// 512, 3924, 512, 3924, 516, 2012, 512, 3916, 508, 2000, 516, 3892, 512, 2000, 512, 2020, 
// 504, 2004, 508, 2008, 512, 7728, 508, 7724,


// 528, 1988, 516, 2000, 524, 3880, 536, 3888, 520, 3904, 520, 3896, 516, 2008, 516, 3896, 
// 520, 3888, 516, 2024, 516, 2012, 512, 2004, 512, 3908, 512, 2004, 512, 2000, 512, 2012, 
// 512, 2000, 512, 2024, 512, 3896, 516, 2008, 516, 1992, 520, 2000, 516, 2012, 512, 3924, 
// 508, 3912, 508, 2028, 508, 3904, 508, 2004, 516, 3888, 516, 3908, 516, 2004, 508, 2012, 
// 512, 3924, 512, 3924, 516, 2012, 512, 3916, 508, 2000, 516, 3892, 512, 2000, 512, 2020, 
// 504, 2004, 508, 2008, 512, 7728, 508, 7724

524, 1976, 520, 2012, 516, 3896, 520, 3908, 516, 3900, 516, 3888, 516, 2000, 520, 3900, 
504, 3896, 508, 2032, 512, 2028, 492, 2004, 512, 3908, 516, 2004, 508, 2004, 508, 2016, 
512, 3896, 516, 2032, 512, 3900, 512, 2012, 504, 2004, 508, 2012, 512, 2000, 512, 3916, 
512, 3904, 508, 2036, 508, 3904, 512, 2004, 512, 3912, 512, 3920, 508, 2004, 512, 2012, 
504, 3896, 512, 3932, 508, 2008, 508, 3924, 508, 2008, 508, 3916, 508, 3916, 508, 3924, 
508, 2004, 508, 2024, 508, 7740, 496, 7728,

524, 1976, 520, 2012, 516, 3896, 520, 3908, 516, 3900, 516, 3888, 516, 2000, 520, 3900, 
504, 3896, 508, 2032, 512, 2028, 492, 2004, 512, 3908, 516, 2004, 508, 2004, 508, 2016, 
512, 3896, 516, 2032, 512, 3900, 512, 2012, 504, 2004, 508, 2012, 512, 2000, 512, 3916, 
512, 3904, 508, 2036, 508, 3904, 512, 2004, 512, 3912, 512, 3920, 508, 2004, 512, 2012, 
504, 3896, 512, 3932, 508, 2008, 508, 3924, 508, 2008, 508, 3916, 508, 3916, 508, 3924, 
508, 2004, 508, 2024, 508, 7740, 496, 7728,

524, 1976, 520, 2012, 516, 3896, 520, 3908, 516, 3900, 516, 3888, 516, 2000, 520, 3900, 
504, 3896, 508, 2032, 512, 2028, 492, 2004, 512, 3908, 516, 2004, 508, 2004, 508, 2016, 
512, 3896, 516, 2032, 512, 3900, 512, 2012, 504, 2004, 508, 2012, 512, 2000, 512, 3916, 
512, 3904, 508, 2036, 508, 3904, 512, 2004, 512, 3912, 512, 3920, 508, 2004, 512, 2012, 
504, 3896, 512, 3932, 508, 2008, 508, 3924, 508, 2008, 508, 3916, 508, 3916, 508, 3924, 
508, 2004, 508, 2024, 508, 7740, 496, 7728,

};
size_t sim_timings_pos;
size_t sim_timings_size;

int main(int argc, const char* argv[])
{
	sim_timings_pos = 0;
	sim_timings_size = sizeof(sim_timings)/sizeof(unsigned int);

	RFControl::startReceiving(0);

	while(sim_timings_pos < sim_timings_size) {

		interruptCallback();

		if(RFControl::hasData()) {
			unsigned int *timings;
			unsigned int timings_size;
			RFControl::getRaw(&timings, &timings_size);
			printf("result: \n");
			for(size_t i=0; i < timings_size; i++) {
				printf("%i ", timings[i]);
				if((i+1)%16 == 0) {
					printf("\n");
				}
			}
			printf("\n");
			unsigned int buckets[8];
			RFControl::compressTimings(buckets, timings, timings_size);
			printf("compressed: ");
			for(int i=0; i < 8; i++) {
				printf("%i ", buckets[i]);
			}
			printf(" t: ");
			for(int i=0; i < timings_size; i++) {
			  printf("%i", timings[i]);
			}
			printf("\n");

			RFControl::continueReceiving();
		  }
	}


}


void attachInterrupt(uint8_t, void (*ic)(void), int mode) {
	interruptCallback = ic;
}

unsigned long micros(void) {
	static unsigned long duration = 0;
	if(sim_timings_pos < sim_timings_size) {
		duration += sim_timings[sim_timings_pos++];
		return duration;
	} else {
		printf("No timings left...\n");
	}
	return 0;
}


void pinMode(uint8_t, uint8_t){}
void digitalWrite(uint8_t, uint8_t){}
int digitalRead(uint8_t){return 0;}
int analogRead(uint8_t){return 0;}
void analogReference(uint8_t mode){}
void analogWrite(uint8_t, int){}
void delay(unsigned long){}
void delayMicroseconds(unsigned int us){}
void detachInterrupt(uint8_t){}